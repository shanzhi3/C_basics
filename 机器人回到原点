bool judgeCircle(char* moves) {
    //计数，左等于右且上等于下时回到原点
    /*
    char move[20001];
    int i;
    int a = 0, b = 0, c = 0, d = 0;

    for (i = 0; i <= 20000; i++) {
        if (move[i] == 'R') {
            a++;
        }
        if (move[i] == 'L') {
            b++;
        }
        if (move[i] == 'U') {
            c++;
        }
        if (move[i] == 'D') {
            d++;
        }
    }

    if ((a == b) && (c == d)) {
        return true;
    }
    else {
        return false;
    }
    //这样写在输入LL时输出的是错误结果
    */

//错误原因：循环条件应该是moves[i] != '\0'，原来的循环会执行到i = 20000，这期间会访问到moves数组之外的内存，导致未定义行为，所以输出结果不符合预期
//所以用strlen给出数组大小，而不是看着测试范围随便给大小
//修改
    int a = 0, b = 0, c = 0, d = 0;
    int i;
    int len = strlen(moves);
    for (i = 0; i < len; i++) {
        if (moves[i] == 'R') {
            a++;
        }
        if (moves[i] == 'L') {
            b++;
        }
        if (moves[i] == 'U') {
            c++;
        }
        if (moves[i] == 'D') {
            d++;
        }
    }
    if ((a == b) && (c == d)) {
        return true;
    } else {
        return false;
    }
}
